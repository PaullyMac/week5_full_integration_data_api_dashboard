version: "3.8"
services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: thumbworx
      POSTGRES_USER: thumb_user
      POSTGRES_PASSWORD: thumb_pass
    ports: ["5432:5432"]
    volumes: ["pgdata:/var/lib/postgresql/data"]

  redis:
    image: redis:7
    ports: ["6379:6379"]

  flask:
    build: ../ai-flask
    command: gunicorn app:app -b 0.0.0.0:5000 --workers=3
    ports: ["5000:5000"]
    environment:
      - DATABASE_URL=postgresql://thumb_user:thumb_pass@postgres:5432/thumbworx
      - REDIS_URL=redis://redis:6379/0
      - TRACCAR_BASE_URL=https://demo.traccar.org
      - TRACCAR_USER=demo_user
      - TRACCAR_PASS=demo_pass
    depends_on: ["postgres","redis"]
    volumes:
      - ../ai-flask:/app

  laravel:
    build: ../backend-laravel
    ports: ["8000:80"]
    environment:
      - DB_HOST=postgres
      - DB_DATABASE=thumbworx
      - DB_USERNAME=thumb_user
      - DB_PASSWORD=thumb_pass
      - FLASK_BASE_URL=http://flask:5000
      - TRACCAR_BASE_URL=https://demo.traccar.org
      - TRACCAR_USER=demo_user
      - TRACCAR_PASS=demo_pass
    depends_on: ["postgres"]
    volumes:
      - ../backend-laravel:/var/www/html
      - laravel_storage:/var/www/html/storage
      - laravel_cache:/var/www/html/bootstrap/cache
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost/up || exit 1"]
      interval: 10s
      retries: 10
  laravel-scheduler:
    build: ../backend-laravel
    depends_on: ["postgres", "redis", "flask"]
    environment:
      - DB_HOST=postgres
      - DB_DATABASE=thumbworx
      - DB_USERNAME=thumb_user
      - DB_PASSWORD=thumb_pass
      - FLASK_BASE_URL=http://flask:5000
      - TRACCAR_BASE_URL=https://demo.traccar.org
      - TRACCAR_USER=demo_user
      - TRACCAR_PASS=demo_pass
    volumes:
      - ../backend-laravel:/var/www/html
      - laravel_storage:/var/www/html/storage
      - laravel_cache:/var/www/html/bootstrap/cache
    command: bash -lc "cd /var/www/html && php artisan optimize:clear && php artisan schedule:work"
    restart: unless-stopped

  next:
    build: ../frontend-next
    ports: ["3000:3000"]
    environment:
      - PROXY_TARGET=http://laravel 
      - NEXT_PUBLIC_API_URL=http://localhost:8000
    volumes:
      - ../frontend-next:/app
      - next_node_modules:/app/node_modules
    
  metabase:
    image: metabase/metabase:latest
    ports: ["3001:3000"]
    depends_on: ["postgres"]
    environment:
      - MB_DB_FILE=/metabase-data/metabase.db
    volumes:
      - metabase_data:/metabase-data

volumes:
  pgdata:
  laravel_storage:
  laravel_cache:
  next_node_modules:
  metabase_data: